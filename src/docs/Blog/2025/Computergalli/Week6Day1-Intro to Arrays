• Array:a special variable, which can hold
more than one value.
⚫ Index: the slot an element of an array is in
(ex.[0],[1],[2])

In JavaScript, arrays aren't primitives but are instead Array objects with the following core characteristics:

JavaScript arrays are resizable and can contain a mix of different data types. (When those characteristics are undesirable, use typed arrays instead.)
JavaScript arrays are not associative arrays and so, array elements cannot be accessed using arbitrary strings as indexes, but must be accessed using nonnegative integers (or their respective string form) as indexes.
JavaScript arrays are zero-indexed: the first element of an array is at index 0, the second is at index 1, and so on — and the last element is at the value of the array's length property minus 1.
JavaScript array-copy operations create shallow copies. (All standard built-in copy operations with any JavaScript objects create shallow copies, rather than deep copies).


JS index.js >...
1
const names = ["Quincy", "Isabel","Mike"]; 2 names[0] = "Quincy";
BEL
3 names[1] = "Isabel";
4 names[2] = "Mike";
5 |
Index
Elements



Why Use Arrays?
If you have a list of items (a list of car names, for example), storing the cars in single variables could look like this:
let carl "Saab"; let car2 - "Volvo"; Tel car
"MW";
However, what if you want to loop through the cars and find a specific one? And what if you had not 3 cars, but 300? The solution is an array!
An array can hold many values under a single name, and you can access the values by referring to an index number.
